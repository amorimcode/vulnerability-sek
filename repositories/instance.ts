/* eslint-disable @typescript-eslint/no-unused-vars */
import axios, { AxiosError, AxiosInstance, AxiosResponse } from "axios";

const BASE_URL = "https://9kwgl6-3000.csb.app";

const axiosInstance = axios.create({
  baseURL: BASE_URL,
  headers: {
    "Content-Type": "application/json",
  },
  timeout: 60000,
});

interface IHandler {
  unauthorizedError: (err: AxiosError) => Promise<never>;
}

axiosInstance.interceptors.response.use(
  (response: AxiosResponse) => response,
  (err) => handler.unauthorizedError(err),
);

const handler: IHandler = {
  unauthorizedError: (err: AxiosError) => {
    const responseData = err.response?.data as {
      message: string;
      code: number;
    };
    if (responseData.message === "Invalid password") {
      return Promise.reject(err);
    }

    if (err.response?.status === 401) {
      window.location.href = "/";
    }

    return Promise.reject(err);
  },
};

export const getInstance = (): AxiosInstance => axiosInstance;

export const setAuthorizationHeader = (token?: string) => {
  if (token) {
    axiosInstance.defaults.headers.Authorization = `Bearer ${token}`;
  } else {
    delete axiosInstance.defaults.headers.Authorization;
  }
};
